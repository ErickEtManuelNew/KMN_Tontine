@using Microsoft.AspNetCore.Components.Authorization

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @if (context.User.Identity?.IsAuthenticated != true)
                    {
                        <RedirectToLogin />
                    }
                    else
                    {
                        <p class="text-center mt-8">Vous n'avez pas les autorisations nécessaires pour accéder à cette page.</p>
                    }
                </NotAuthorized>
                <Authorizing>
                    <div class="min-h-screen flex items-center justify-center">
                        <Loading IsLoading="true" Message="Vérification des autorisations..." />
                    </div>
                </Authorizing>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <PageTitle>Page non trouvée</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <div class="min-h-screen flex items-center justify-center bg-gray-100">
                    <div class="text-center">
                        <h1 class="text-4xl font-bold text-gray-900 mb-4">404</h1>
                        <p class="text-gray-600 mb-8">La page que vous recherchez n'existe pas.</p>
                        <a href="/" class="text-indigo-600 hover:text-indigo-500">
                            Retourner à l'accueil
                        </a>
                    </div>
                </div>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    public class RedirectToLogin : ComponentBase
    {
        [Inject]
        private NavigationManager NavigationManager { get; set; }

        protected override void OnInitialized()
        {
            NavigationManager.NavigateTo("/login", true);
        }
    }
} 