@page "/register"

@using KMN_Tontine.Blazor.UI.Helpers
@using KMN_Tontine.Blazor.UI.Services
@using KMN_Tontine.Blazor.UI.Services.Base
@inject IAuthService AuthService
@inject NavigationManager Navigation

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h3 class="text-center text-primary">KMN Tontine !</h3>
                    <p class="text-center text-muted">
                        Rejoignez notre communaut√© dynamique et g√©rez vos tontines en toute simplicit√©.
                    </p>
                    <!-- Message de confirmation -->
                    @if (showConfirmationMessage)
                    {
                        <div class="alert alert-success mt-3 text-center">
                            <strong>F√©licitations !</strong> Vous √™tes maintenant inscrit sur KMN Tontine. Un e-mail de confirmation a √©t√© envoy√© √† <strong>@registerRequest.Email</strong>. Veuillez v√©rifier votre bo√Æte de r√©ception.
                        </div>
                    }
                    <EditForm Model="@registerRequest" OnValidSubmit="HandleRegistration">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <!-- Pr√©nom -->
                        <div class="mb-3">
                            <label for="firstName" class="form-label">Pr√©nom</label>
                            <InputText id="firstName" @bind-Value="registerRequest.FirstName" class="form-control" placeholder="Entrez votre pr√©nom" />
                            <ValidationMessage For="@(() => registerRequest.FirstName)" class="text-danger" />
                        </div>

                        <!-- Nom -->
                        <div class="mb-3">
                            <label for="lastName" class="form-label">Nom</label>
                            <InputText id="lastName" @bind-Value="registerRequest.LastName" class="form-control" placeholder="Entrez votre nom" />
                            <ValidationMessage For="@(() => registerRequest.LastName)" class="text-danger" />
                        </div>

                        <!-- Date de naissance -->
                        <div class="mb-3">
                            <label for="dateOfBirth" class="form-label">Date de naissance</label>
                            <InputDate id="dateOfBirth" @bind-Value="registerRequest.DateOfBirth" class="form-control" placeholder="S√©lectionnez votre date de naissance" />
                            <ValidationMessage For="@(() => registerRequest.DateOfBirth)" class="text-danger" />
                            <small class="form-text text-muted">Votre √¢ge doit √™tre sup√©rieur √† 18 ans pour vous inscrire.</small>
                        </div>

                        <!-- E-mail -->
                        <div class="mb-3">
                            <label for="email" class="form-label">Adresse e-mail</label>
                            <InputText id="email" @bind-Value="registerRequest.Email" class="form-control" placeholder="Entrez votre adresse e-mail" />
                            <ValidationMessage For="@(() => registerRequest.Email)" class="text-danger" />
                            <small class="form-text text-muted">Nous ne partagerons jamais votre e-mail. Il sera utilis√© uniquement pour confirmer votre inscription.</small>
                        </div>

                        <!-- Mot de passe -->
                        <div class="mb-3">
                            <label for="password" class="form-label">Mot de passe</label>
                            <InputText id="password" @bind-Value="registerRequest.Password" type="password" class="form-control" placeholder="Entrez un mot de passe (minimum 8 caract√®res)" />
                            <ValidationMessage For="@(() => registerRequest.Password)" class="text-danger" />
                            <small class="form-text text-muted">
                                Pour prot√©ger votre compte, votre mot de passe doit contenir au moins :
                                <ul>
                                    <li>8 caract√®res</li>
                                    <li>1 majuscule</li>
                                    <li>1 minuscule</li>
                                    <li>1 chiffre</li>
                                    <li>1 caract√®re sp√©cial</li>
                                </ul>
                                <strong>Avec KMN Tontine, votre s√©curit√© est notre priorit√©.</strong>
                            </small>
                        </div>

                        <!-- Confirmation du mot de passe -->
                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">Confirmez le mot de passe</label>
                            <InputText id="confirmPassword" @bind-Value="confirmPassword" type="password" class="form-control" placeholder="Confirmez votre mot de passe" />
                            <ValidationMessage For="@(() => confirmPassword)" class="text-danger" />
                        </div>

                        <!-- Adresse (optionnel) -->
                        <div class="mb-3">
                            <label for="address" class="form-label">Adresse (optionnel)</label>
                            <InputText id="address" @bind-Value="registerRequest.Address" class="form-control" placeholder="Entrez votre adresse" />
                            <small class="form-text text-muted">Cette information est facultative mais peut √™tre utile pour les correspondances officielles.</small>
                        </div>

                        <!-- Bouton d'envoi -->
                        <button type="submit" class="btn btn-primary w-100">
                            @if (_loading)
                            {
                                <span class="spinner-border spinner-border-sm"></span>
                            }
                            S'inscrire
                        </button>

                        <p class="mt-4 text-sm text-center text-gray-600">
                            D√©j√† inscrit ?
                            <a href="/login" class="text-indigo-600 hover:underline">Cliquez ici pour vous connecter</a>.
                        </p>
                    </EditForm>

                    <!-- Message d'erreur -->
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger mt-3 text-center">
                            <strong>@errorMessage</strong>

                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    private RegisterRequest registerRequest = new RegisterRequest();
    private bool showConfirmationMessage = false;
    private string errorMessage = null;
    private bool _loading;
    private string confirmPassword;
    private PasswordHelper _passwordHelper = new PasswordHelper();

    protected override void OnInitialized()
    {
        registerRequest.DateOfBirth = DateTime.Today.AddYears(-18); // üìÖ Initialise √† aujourd'hui
    }

    private async Task HandleRegistration()
    {
        try
        {
            _loading = true;

            // Valider les donn√©es avant envoi
            if (string.IsNullOrWhiteSpace(registerRequest.FirstName) ||
                string.IsNullOrWhiteSpace(registerRequest.LastName) ||
                registerRequest.DateOfBirth == default ||
                string.IsNullOrWhiteSpace(registerRequest.Email) ||
                string.IsNullOrWhiteSpace(registerRequest.Password))
            {
                errorMessage = "Veuillez remplir tous les champs obligatoires.";
                return;
            }

            if (registerRequest.Password != confirmPassword)
            {
                errorMessage = "Les mots de passe ne correspondent pas.";
                return;
            }

            // Hasher le mot de passe
            // registerRequest.Password = _passwordHelper.HashPassword(registerRequest.Password);

            registerRequest.Role = RoleType.Member; // R√¥le par d√©faut pour les utilisateurs

            // Envoyer les donn√©es au backend pour enregistrement
            var response = await AuthService.RegisterAsync(registerRequest);

            if (response.Success)
            {
                // Afficher le message de confirmation
                showConfirmationMessage = true;
                StateHasChanged(); // Forcer le rafra√Æchissement

                // Optionnel : Rediriger vers une page de confirmation ou de connexion apr√®s un d√©lai
                await Task.Delay(6000); // Attendre 3 secondes
                Navigation.NavigateTo("/login");
            }
            else
            {
                // G√©rer les erreurs du serveur
                var error = response.Message;
                errorMessage = $"Erreur lors de l'enregistrement : {error}";
            }
        }
        catch (Exception ex)
        {
            // G√©rer les exceptions r√©seau ou autres
            errorMessage = $"Une erreur inattendue s'est produite : {ex.Message}";
        }
        finally
        {
            _loading = false;
        }
    }
} 