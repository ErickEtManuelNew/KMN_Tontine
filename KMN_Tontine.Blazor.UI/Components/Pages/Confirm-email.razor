@page "/confirm-email"
@inject NavigationManager Navigation
@inject IAuthService AuthService

<h3>Confirmation de compte</h3>

@if (isConfirmed)
{
    <div class="alert alert-success">
        Votre compte a été confirmé avec succès ! Vous pouvez maintenant vous connecter.
    </div>
}
else if (errorMessage != null)
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}

@code {
    private bool isConfirmed = false;
    private string errorMessage = null;
    private Guid userId;
    private string token;

    protected override async Task OnInitializedAsync()
    {
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        
        var userIdStr = query["userId"];
        token = query["token"];

        if (string.IsNullOrEmpty(userIdStr) || string.IsNullOrEmpty(token))
        {
            errorMessage = "Paramètres de confirmation manquants.";
            return;
        }

        if (!Guid.TryParse(userIdStr, out userId))
        {
            errorMessage = "Identifiant utilisateur invalide.";
            return;
        }

        var response = await AuthService.ConfirmEmailAsync(userId, token);

        if (response.Success)
        {
            isConfirmed = true;
        }
        else
        {
            errorMessage = "Le lien de confirmation est invalide ou a expiré.";
        }
    }
}