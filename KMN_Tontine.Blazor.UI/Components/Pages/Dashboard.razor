@page "/dashboard"
@using KMN_Tontine.Blazor.UI.Services
@using KMN_Tontine.Blazor.UI.Services.Base
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@attribute [Authorize]
@inject ICompteService CompteService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject CurrentUserService CurrentUser

<PageTitle>Dashboard</PageTitle>

@if (_loading)
{
    <div class="flex justify-center items-center h-screen">
        <div class="animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-blue-500"></div>
    </div>
}
else if (_error)
{
    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
        <strong class="font-bold">Erreur!</strong>
        <span class="block sm:inline">Une erreur s'est produite lors du chargement des donnÃ©es.</span>
    </div>
}
else
{
    <div class="container mx-auto px-4 py-8">
        <div class="alert alert-success shadow rounded text-center">
            ðŸŽ‰ Bonjour et bienvenue sur votre tableau de bord KMN Tontine !
        </div>
        <div class="bg-white rounded-lg shadow-lg p-6">
            <h2 class="text-2xl font-bold mb-6 text-center">Espace de @_userName dans l'association @_associationName</h2>

            <div class="overflow-x-auto">
                <table class="min-w-full bg-white">
                    <thead class="bg-gray-100">
                        <tr>
                            <th class="px-6 py-3 border-b border-gray-200 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">Comptes</th>
                            <th class="px-6 py-3 border-b border-gray-200 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">Solde</th>
                            <th class="px-6 py-3 border-b border-gray-200 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">Notes</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-200">
                        @foreach (var compte in _comptes)
                        {
                            <tr>
                                <td class="px-6 py-4 whitespace-no-wrap text-sm leading-5 font-medium text-gray-900">
                                    @Enum.GetName(typeof(AccountType), compte.Type)
                                </td>
                                <td class="px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-500">
                                    @compte.Balance
                                </td>
                                <td class="px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-500">
                                    @compte.Comment
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="mt-6">
                <center>
                    <button @onclick="NavigateToCrediter" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                        CrÃ©diter des comptes
                    </button>
                </center>
            </div>
        </div>
    </div>
}

@code {
    private List<AccountResponse> _comptes = new();
    private bool _loading = true;
    private bool _error = false;
    private string _userName = string.Empty;
    private string _associationName = "Foreur";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _userName = CurrentUser.UserName ?? "Baramine";

            _comptes = await CompteService.GetComptesAsync(CurrentUser.UserId);
        }
        catch (Exception)
        {
            _error = true;
        }
        finally
        {
            _loading = false;
        }
    }

    private void NavigateToCrediter()
    {
        NavigationManager.NavigateTo("/myaccounts");
    }
} 